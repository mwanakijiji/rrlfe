#!/bin/bash

#$ -M espaldin@nd.edu   # Email address for job notification
#$ -m abe            # Send mail when job begins, ends and aborts
#$ -pe smp 4     # Specify parallel environment and legal core size
#$ -q debug           # Specify queue
#$ -N rrlfe_reduce_01       # Specify job name

### start timestamp
echo "Start time"
date

# set filesystem
export SING_PATH=/scratch365/espaldin
export SING_FILE=test.sif
#export CODE_HOME=/afs/crc.nd.edu/user/e/espaldin/Private/rrlfe_work
export OUT_DIR=/scratch365/espaldin

# Required modules
module load python/3

# make directory to write to (random job label prevents confusion between jobs)
export JOB_LABEL=$RANDOM
echo "Starting job with label " $JOB_LABEL
echo "Making dir " $OUT_DIR/$JOB_LABEL
mkdir $OUT_DIR/$JOB_LABEL
cd $OUT_DIR/$JOB_LABEL

# remove stuff that was already there
#rm -fr $OUT_DIR/$JOB_LABEL/rrlfe
#rm -fr $OUT_DIR/$JOB_LABEL/robospect.py
#rm -fr $OUT_DIR/$JOB_LABEL/requirements_bare_versions.txt

# copy singularity file to here
cp $SING_PATH/$SING_FILE .

# get code
#wget https://raw.githubusercontent.com/mwanakijiji/rrlfe/main/requirements_bare_versions.txt
#git clone https://github.com/mwanakijiji/rrlfe.git

# run singularity (installs stuff)
# (bind syntax is host:container)
# bind top level in container to current directory in host system
export SINGULARITY_BIND=$PWD:$HOME,$PWD:/Users/bandari/Documents/git.repos/
singularity run $SING_FILE
echo "Did run; now do exec"

# option to remove some input files if just want to test
#singularity exec $SING_FILE rm -v ${HOME}/rrlfe/src/model_spectra/rrmods_all/original_ascii_files/[5-6]*
#echo "Did rm; now to next exec"

singularity exec $SING_FILE python ${HOME}/rrlfe/high_level_application_script.py
echo "Did mcmc; now tarring"

# tar output files
tar --verbose --create -f job_results_$JOB_LABEL.tar $OUT_DIR/$JOB_LABEL

echo "Tarred results to job_results_" $JOB_LABEL ".tar"

### timestamp end
echo "End time"
date
